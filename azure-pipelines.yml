
# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pool:
  vmImage: ubuntu-latest

variables:
  environmentName: "provision-vm-example-0001"
  token: "gcwult26jqamx36nidsyzdd4wsz2apy6zhb3uc3hxwvldml2qeiq"

stages:
- stage: Provision
  jobs:
  - job:
    steps:
      - task: AzureCLI@2
        displayName: 'Create Environment'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: az group create --name $(environmentName) --location japaneast;
      
      - task: AzureCLI@2
        displayName: 'Create VM'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az vm create --name ProvisionedVM --image UbuntuLTS --location japaneast --generate-ssh-keys --resource-group $(environmentName);
    
      - task: AzureCLI@2
        displayName: 'Register VM'
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            az vm extension set `
              --publisher Microsoft.Azure.Extensions `
              --version 2.0 `
              --name CustomScript `
              --vm-name ProvisionedVM `
              --resource-group $(environmentName) `
              --settings "{`\`"fileUris`\`": [`\`"https://raw.githubusercontent.com/blue0316/azure-pipeline-puppeteer/main/register-server-in-environment.sh`\`"],`\`"commandToExecute`\`": `\`"./register-server-in-environment.sh`\`"}";

- stage: 
  dependsOn: Provision
  condition: succeeded()
  displayName: Test Stage
  jobs:
  - deployment: TestCustomTask
    displayName: Deploy Web App
    environment:
      name: provision-vm-example-0001
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'
          - script: |
              git clone https://github.com/blue0316/puppeteer-test-project.git
            displayName: 'git clone'
            continueOnError: true
          - task: Npm@1
            displayName: 'install node packages'
            inputs:
              command: 'install'
              workingDir: 'puppeteer-test-project'
            continueOnError: true
          - task: Npm@1
            displayName: 'start test project'
            inputs:
              command: ci
              workingDir: 'puppeteer-test-project'
            continueOnError: true

- stage: CleanUp
  jobs:
  - job:
    steps:
      - task: AzureCLI@2
        displayName: 'Destroy Environment'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: az group delete --name $(environmentName) --no-wait --yes;