# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  location: 'westus2'
  resourceGroup: 'myResourceGroup'
  vmName: "ProvisionedVM"
  vmSize: 'Standard_D1_v2'
  environmentName: "azure-pipeline-env"
  token: "ntuwz3vkcjuibbspgvpyltrnpeuyypr6v2c32hqtyb4oalfpmuqa"

stages:
- stage: Provision
  displayName: VM Provision Stage
  jobs:
  - job:
    steps:
      - task: AzureCLI@2
        displayName: 'Create Resource Group'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: az group create --name $(environmentName) --location $(location)
      
      - task: AzureCLI@2
        displayName: 'Create a VM'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: 'pscore'
          scriptLocation: inlineScript
          inlineScript: az vm create --resource-group $(resourceGroup) --name $(vmName) --size $(vmSize) --image UbuntuLTS
          
      - task: AzureCLI@2
        displayName: 'Get the public IP address of the VM'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: 'pscore'
          scriptLocation: inlineScript
          inlineScript: publicIp=$(az vm show -d --ids $(vm resource id) --query publicIps -o tsv)

      - task: AzureCLI@2
        displayName: 'Register VM'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: 'pscore'
          scriptLocation: inlineScript
          inlineScript: az devops environment create --name $(environmentName) --resource-type VirtualMachine --resource-id $(vm resource id) --machine-name $(vmName) --public-ip-address $publicIp

- stage: Test
  dependsOn: Provision
  displayName: Test Stage
  jobs:
  - deployment: TestCustomTask
    displayName: Deploy Web App
    environment:
      name: $(environmentName)
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - task: NodeTool@0
            displayName: 'Install Node.js'
            inputs:
              versionSpec: '16.x'
          - script: |
              git clone https://github.com/blue0316/puppeteer-test-project.git
            displayName: 'git clone'
            continueOnError: true
          - task: Npm@1
            displayName: 'install node packages'
            inputs:
              command: 'install'
              workingDir: 'puppeteer-test-project'
            continueOnError: true
          - task: Npm@1
            displayName: 'start test project'
            inputs:
              command: ci
              workingDir: 'puppeteer-test-project'
            continueOnError: true

- stage: CleanUp
  dependsOn: Test
  jobs:
  - job:
    steps:
      - task: AzureCLI@2
        displayName: 'Delete VM'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az vm delete --resource-group $(environmentName) --name $(vmName) --yes
              