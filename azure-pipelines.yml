
# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pool:
  vmImage: ubuntu-latest

variables:
  environmentName: "azure-pipeline-env"
  vmName: "ProvisionedVM"
  token: "ntuwz3vkcjuibbspgvpyltrnpeuyypr6v2c32hqtyb4oalfpmuqa"

stages:
- stage: Provision
  displayName: VM Provision Stage
  jobs:
  - job:
    steps:
      - task: AzureCLI@2
        displayName: 'Create Environment'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: az group create --name $(environmentName) --location japaneast;
      
      - task: AzureCLI@2
        displayName: 'Create VM'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: 'pscore'
          scriptLocation: inlineScript
          inlineScript: az vm create --name $(vmName) --image UbuntuLTS --location japaneast --generate-ssh-keys --resource-group $(environmentName);
    
      - task: AzureCLI@2
        displayName: 'Register VM'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: 'pscore'
          scriptLocation: inlineScript
          inlineScript: |
            az vm extension set `
              --publisher Microsoft.Azure.Extensions `
              --version 2.0 `
              --name CustomScript `
              --vm-name $(vmName) `
              --resource-group $(environmentName) `
              --settings "https://raw.githubusercontent.com/blue0316/azure-pipeline-puppeteer/main/setting.json";

# - stage: Test
#   dependsOn: Provision
#   displayName: Test Stage
#   jobs:
#   - deployment: TestCustomTask
#     displayName: Deploy Web App
#     pool:
#       vmImage: 'Ubuntu-latest'
#     environment:
#       name: $(environmentName)
#       resourceType: VirtualMachine
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: NodeTool@0
#             displayName: 'Install Node.js'
#             inputs:
#               versionSpec: '16.x'
#           - script: |
#               git clone https://github.com/blue0316/puppeteer-test-project.git
#             displayName: 'git clone'
#             continueOnError: true
#           - task: Npm@1
#             displayName: 'install node packages'
#             inputs:
#               command: 'install'
#               workingDir: 'puppeteer-test-project'
#             continueOnError: true
#           - task: Npm@1
#             displayName: 'start test project'
#             inputs:
#               command: ci
#               workingDir: 'puppeteer-test-project'
#             continueOnError: true

- stage: CleanUp
  # dependsOn: Test
  jobs:
  - job:
    steps:
      - task: AzureCLI@2
        displayName: 'Delete VM'
        continueOnError: true
        inputs:
          azureSubscription: 'ServiceConnectionForAzureTestPipeline'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az vm delete --resource-group $(environmentName) --name $(vmName) --yes
              