
# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  environmentName: "provision-vm-example-0001"
  token: "aooihka2mcrfnfwgp7xghv6ofsiluxjgerttzp7zz42gdtfzspoa"

stages:
- stage: Provision
  jobs:
  - job:
    steps:
    - task: AzureCLI@2
      displayName: 'Create Environment'
      continueOnError: true
      inputs:
        azureSubscription: 'MyAzureSubscription(f75e5af2-ade0-444e-8b38-221f69cbc9d8)'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: 'az group create --name $(environmentName) --location japaneast;'
    # - task: AzureCLI@2
    #   displayName: 'Create VM'
    #   continueOnError: true
    #   inputs:
    #     azureSubscription: 'MyAzureSubscription(f75e5af2-ade0-444e-8b38-221f69cbc9d8)'
    #     scriptType: pscore
    #     scriptLocation: inlineScript
    #     inlineScript: |
    #       az vm create --name ProvisionedVM --image UbuntuLTS --admin-username azureuser --location japaneast --generate-ssh-keys --resource-group $(environmentName);
    - task: AzureCLI@2
      continueOnError: true
      inputs:
        azureSubscription: 'MyAzureSubscription(f75e5af2-ade0-444e-8b38-221f69cbc9d8)'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az vm run-command create --name "registCommand" --vm-name "ProvisionedVM" --resource-group "provision-vm-example-0001" --script "$ErrorActionPreference="Stop";If(-NOT ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent() ).IsInRole( [Security.Principal.WindowsBuiltInRole] "Administrator")){ throw "Run command in an administrator PowerShell prompt"};If($PSVersionTable.PSVersion -lt (New-Object System.Version("3.0"))){ throw "The minimum version of Windows PowerShell that is required by the script (3.0) does not match the currently running version of Windows PowerShell." };If(-NOT (Test-Path $env:SystemDrive\'azagent')){mkdir $env:SystemDrive\'azagent'}; cd $env:SystemDrive\'azagent'; for($i=1; $i -lt 100; $i++){$destFolder="A"+$i.ToString();if(-NOT (Test-Path ($destFolder))){mkdir $destFolder;cd $destFolder;break;}}; $agentZip="$PWD\agent.zip";$DefaultProxy=[System.Net.WebRequest]::DefaultWebProxy;$securityProtocol=@();$securityProtocol+=[Net.ServicePointManager]::SecurityProtocol;$securityProtocol+=[Net.SecurityProtocolType]::Tls12;[Net.ServicePointManager]::SecurityProtocol=$securityProtocol;$WebClient=New-Object Net.WebClient; $Uri='https://vstsagentpackage.azureedge.net/agent/2.210.1/vsts-agent-win-x64-2.210.1.zip';if($DefaultProxy -and (-not $DefaultProxy.IsBypassed($Uri))){$WebClient.Proxy= New-Object Net.WebProxy($DefaultProxy.GetProxy($Uri).OriginalString, $True);}; $WebClient.DownloadFile($Uri, $agentZip);Add-Type -AssemblyName System.IO.Compression.FileSystem;[System.IO.Compression.ZipFile]::ExtractToDirectory( $agentZip, "$PWD");.\config.cmd --environment --environmentname "provision-vm-example-0001" --agent $env:COMPUTERNAME --runasservice --work '_work' --url 'https://dev.azure.com/shanthan0083/' --projectname 'PuppeteerTestProject' --auth PAT --token lvspqfgbl5zb2r2p3zulfel4ufoormcpkq2omebug6a3ibficwiq; Remove-Item $agentZip;"

- stage: Test
  displayName: Test Stage
  jobs:
  - deployment: TestCustomTask
    displayName: Deploy Web App
    environment:
      name: provision-vm-example-0001
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'
          - script: |
              git clone https://github.com/blue0316/puppeteer-test-project.git
            displayName: 'git clone'
            continueOnError: true
          - task: Npm@1
            displayName: 'install node packages'
            inputs:
              command: 'install'
              workingDir: 'puppeteer-test-project'
            continueOnError: true
          - task: Npm@1
            displayName: 'start test project'
            inputs:
              command: ci
              workingDir: 'puppeteer-test-project'
            continueOnError: true